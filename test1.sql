--2025-09-01 오라클 1일차
/*
   23page => Chapter 01 ~ Chapter 02 : 데이터베이스 개념
                    ***Chapter 03 04 05
                    -------------------- 웹 프로그래머
                   ***Chapter 06 07 => 데이터베이스 설계
                   ** Chapter 08 => 트랜젹션
1) 자료/정보
    = 자료 : 가공되지 않은 단순한 결과값
    = 정보 : 자료를 가공한 데이터
       -------------------------------- 저장하는 공간 데이터베이스
2) 데이터베이스 
    = 역할 =========> CRUD
        1. 검색 : SELECT
        2. 수정 : UPDATE
        3. 추가 : INSERT
        4. 삭제 : DELETE
3) 데이터베이스 개념과 특징
        1. 데이터베이스 개념
            = ***통합된 데이터 : 중복을 배제
            = 저장된 데이터 : 저장 매체를 저장 : 관련된 데이터
                                      => 사원 정보, 회원 정보, 맛집, 레시피... 
            = 운영 데이터 : 업무와 관리 => 업무 수행
            = **공용데이터 : 공동으로 사용이 가능 (static)
               => static
        2. 데이터베이스 특징
            = 실시간 접근성 => 데이터베이스는 항상 열려있다
                오라클은 자동 실행
            = 계속적인 변화 : 회원가입, 게시판, 댓글, 인기순위, 예매순위...
            = 동시공유 : 사용자가 동시에 같은 데이터를 이용
            = 내용에 의한 참조 : 자바(메모리 주소), 데이터베이스(데이터 내용으로 참조)
            ***데이터베이스 : 관련된 데이터를 저장한 후에 관리
                                    => CRUD
                                    => 장점 : 보안/영구적인 저장 장치
                                    => 수정, 삭제, 추가, 검색 => 쉽게 제작
                                    => 일반 사용자는 사용하기 어렵다
         3. 데이터베이스 시스템 구성 (27page)
            DBMS (데이터베이스 관리 시스템)
                       ----------------------------- 데이터 하드디스크에 저장
                          사용자(프로그래머)
                              | =>  연결(SQL:문자열)
                              |               ------------ 응용(웹:92%)
                                       => 자바
                                             JSP/Spring
                                             --- main => HTML
                                       => 데이터베이스
                                              MyBatis/JPA
                                       => HTML/CSS/JavaScript
                                              JQuery(Ajax), VueJS, ReactJS
                          DBMS : 오라클, MySQL, MSSQL, MariaDB... DB2
                              |
                         운영체제
                              |
                       하드디스크
                 데이터베이스 : 관련된 데이터를 모아서 관리
                                      물리적으로는 컴퓨터 내부의 하드디스크에 저장
                  => 데이터베이스-데이터를 저장하는 공간
                            => 변수 / 배열 / 클래스 / 파일
                    데이터 모델 : 데이터를 저장하는 방법 
                                       예) 문자, 숫자, 날짜
                                        문자 : VARCHAR2(1~4000byte), CHAR,(1~2000byte), CLOB(4GB)
                                        숫자 : NUMBER(정수,실수)
                                        날짜 : DATE, TIMESTAMP
                                        기타 : 동영상, 이미지 ...
                                                 바이너리:BLOB
                                                 파일:BFILE
                                          => 테이블 설계
                                         ------------------------------------
                                         데이터
                                              = 정형화된 데이터 : 프로그램에 필요한 데이터를 정리해서 저장 => 데이터베이스
                                              = 반정형화 데이터 : 구분이 된 데이터
                                                   => HTML, XML, JSON ...
                                               = 비정형화된 데이터 : 트위터, FaceBook, 카페
                                                  ---------------------
                                                      | 필요한 데이터 추출 => 정형화된 데이터 변경
                                                      -----------------------------------------------------
                                                      | 빅데이터 과정 => 예측/추천 => 머신러닝
                                                      | 학습 => 딥러닝
                                                      ----------------------------------------------------- AI
                                                = 키
                                                    기본키(중복을 허용하지 않는 키)
                                                               ------------ 수정, 삭제(무결성의 원칙)

                                                     후보키 : 기본키를 대체
                                                                 => 이메일, 전화번호
                                                      외래키 : 다른 테이블을 참조 -정규화
                                                 = NOT NULL, CHECK ...
                                    ------------------------------------------------------------------------------
                                     28page
                                           => 데이터베이스 발전 과정
                                                  = 파일 시스템 : io =>관리가 어렵다 / 보안이 취약
                                                                 연결관계를 만들기 어렵다
                                                        1) 전송(JSON,XML)
                                                  = 데이터베이스 시스템 => 관련자에게 공유 (ERP)
                                                                   관리가 쉽다, 연결관계, 보안이 뛰어나다
                                                  = 웹 데이터베이스 시스템 => 모든 사용자에 공개
                                                  = 분산 데이터베이스 시스템 :백업, MSA
                                                   -----------------------------------------------------------
                                                   장점 : 중복을 최소화, 일관성, 독립성, 관리기능, 프로그램 연결(ojdbc, odbc)
                                                    오라클 
                                                                     i, g, c
                                                          => 8i, 9i => 인터넷(웹에서 사용)
                                                          => 10g, 11g => grid
                                                          => 12c, 21c => component
                                                      -----------------------------------------------------------
                                                        43Page
                                                              파일 시스템 VS DBMS
                                                              -------------
                                                                응용시스템 : 자바 / C / 파이썬
                                                                 => 접근이 가능
                                                               CPU / 주기억장치 : 사용빈도가 낮다
                                                                 => 중복이 많다
                                                                 => 여러개 파일일 경우에는 제어가 어렵다
                                                                DBMS
                                                                CPU / 주기억장치 : 사용빈도가 높다                                                         
                                                                데이터 중복 최소화
                                                                데이터의 일관성 : 설계
                                                                데이터의 독립성
                                                                관리 기능 제공
                                                                프로그램 개발 생산성 향상
                                                                데이터 무결성 / 데이터 표준
                                                 ----------------------------------------------------------------
                                                   데이터베이스 구성
                                                            응용 프로그램(자바)
                                                                     | => 오라클이 알 수 있는 언어 => SQL
                                                                 오라클
                                                                     | => read/write
                                                                 하드디스크(데이터베이스)
                                             -----------------------------------------------------------------
                                                     16page
                                                            데이터베이스 언어 : ANSI(표준화)
                                                                                        --------------
                                                                                        1. 데이터형
                                                                                        2. 내장함수(라이브러리 함수)
                                                          SQL의 종류
                                                               DQL:데이터 검색
                                                                       SELECT
                                                               DML:데이터 조작
                                                                       INSERT, UPDATE, DELETE
                                                                DDL:생성/삭제 => 정의 언어
                                                                       CREATE, DROP, ALTER, RENAME, TRUNCATE
                                                                       1) 데이터 저장 공간 : table
                                                                       2) 가상 테이블 보안 : View
                                                                       3) 인덱스 : 속도 최적화
                                                                       4) 시노임 : 테이블의 별칭
                                                                       5) PL/SQL => 함수, 메소드, 트리거  
                                                                DCL:제어 언어
                                                                        GRANT(권한 부여), REVOKE(권한 해제)
                                                                 TCL:트렌잭션 제어언어
                                                                           정상 저장 : COMMIT
                                                                            => 데이터 저장시에는 COMMIT을 수행
                                                                            => 자바:AutoCommit(트랜잭션)
                                                                                  예) 입고 ==> 재고
                                                                                   (정상수행)   (오류발생)
                                                                                       출고 ==> 재고
                                                                         명령문 해제 : ROLLBACK           
*/
-- DQL (SELECT)
/*
        테이블의 구성:이차원 형식
      ----------------------------
           id     pwd     name  ========> 컬럼 / 속성
      ----------------------------
        hong   1234    홍길동 ========> ROW, 튜플, 자바 객체(인스턴스)
      ----------------------------
        shim    1234    심청이 ========> ROW, 튜플, 자바 객체(인스턴스)
      ----------------------------
        park   1234     박문수 ========> ROW, 튜플, 자바 객체(인스턴스)
      ----------------------------
       도메인
       -------------------
       1. 형식 => 순서
          SELECT*(ALL)|column1,column2...
                       ----------------- 필요한 데이터만 요청
          FROM 테이블
          ------------------ 필수
          [
            WHERE 조건 => 연산자
            GROUP BY 그룹컬럼 => 통계
            HAVING 그룹 조건 => GROUP BY가 있는 경우에만 사용이 가능
            ORDER BY 정렬컬럼 (ASC|DESC) => 속도가 늦다(인덱스)
          ]
       2. 조건 => 연산자
       3. 내장 함수
       4. 다른 테이블 연결
          ***= JOIN
          ***= SubQuary(부속쿼리)
          
          table : emp
          1) 주의점 = 대소문자 구분이 없다(약속=>키워드는 대문자)
                    단 저장된 데이터는 대소문 구분한다
                  = 문자열, 날짜 사용 => "
                  = 문자열 결합 => ||
                  = 별칭:컬럼명 as 별칭, 컬럼명 "별칭"
                  = 중복없는 데이터:DISTINCT
                  = 사용방법
                    SELECT 컬럼...
                    FROM 테이블명
                    WHERE ...
          emp : 사원정보 => 오라클에서 연습용 테이블
         dept : 부서 정보
         -----------------------JOIN
         emp : 사번(empno), 이름(ename), 직위(job),
                 사수사번(mgr), 입사일(hiredate), 급여(sal),
                성과급(comm), 부서번호(deptno)
               => 14명의 사원 정보 저장
--1. 모든 사원의 정보 검색 => 문장 종료시 ;을 사용한다
*/
/*
SELECT *
FROM emp;
*/
--2. 원하는 데이터만 출력
-- SELECT column1,column2... FROM 테이블
/*
SELECT empno.ename,job,hiredate,sal
FROM emp;
*/
--3. 별칭 컬럼 "별칭",컬럼 as 별칭
/*SELECT empno "사번",ename "이름",job "직위",hiredate "입사일",sal as 급여
FROM emp;
*/
--4. 상세 => 중복이 없는 데이터 => empno
/*
SELECT *
FROM emp
WHERE empno=7788;
*/
--5. 이름으로 찾기 => 데이터는 대소문자 구분
/*
SELECT *
FROM emp
WHERE ename='KING';
*/
--6. 직위를 출력 => 중복 제거
/*
SELECT DISTINCT job
FROM emp;
*/
--7. 문자열 결합
/*
SELECT ename||'님의 급여는 '||sal||'입니다'
FROM emp;
*/
/*
문자열 입력 반드시 대소문자 확인
=> 문자열 / 날짜 => "
중복제거 : 컬럼앞에 DISTINCT
문장이 종료되면 ; (자바에서 ;를 사용하면 오류발생)
필요한 경우에는 별칭 컬럼 "별칭", 컬럼 as 별칭
=> 키워드는 대문자로 사용
** 순서가 틀리면 오류 발생
   SELECT-FROM-WHERE-GROUP BY-HAVING-ORDER BY
** &기호는 입력값을 받는 경우에 사용
   데이터 추가(크롤링=이미지)에 &를 다른 문자로 대체 후 저장 
 ---------------------------------------------------
*/
/*
SELECT DISTINCT job
FROM emp;
WHERE empno=&empno;
*/
/*
   통합된 데이터 
   ---------------- 관련된 데이터는 한개의 폴더를 이용해서 저장
            데이터베이스 : 폴더(XE)
            = 폴더 : 데이터베이스
            = 파일 : 테이블
            = ROW => 한명, 한개에 대한 정보를 저장하고 있다
                             -------------------------------------------- 객체
                             ~VO
            = ROW단위로 데이터를 출력/입력
 47page
   2. 데이터베이스 사용자
        일반 사용자 : 이미 만들어진 프로그램을 사용 (SQL을 사용하지 않는다)
        응용 프로그래머 : 웹개발자
                                  일반 사용자가 요청시에 SQL문을 만들어주는 역할
                                  => SELECT, INSERT, UPDATE, DELETE
                                  => 데이터 조작
                                  => 간단한 DB 설계
                                         => 댓글, 게시판
      데이터베이스 관리자(DBA)
                                  => 요구사항 분석 : 데이터베이스 설계
                                  => 메뉴얼 제작
                                  => 데이터베이스 점검
                                  => 권한 부여/권한 해제
       -------------------------------------------------------------------------
   3. DBMS
         사용자와 데이터베이스(데이터)를 연결시켜주는 소프트웨어
                      ------------------------
                       데이터 정의, 데이터 조작, 데이터 추출, 데이터 제어
         => 소형 : SQLite => 핸드폰 / 브라우저에 내장
              중형 : Oracle, MS-SQL, MY-SQL ... : 중소기업
              대용량 : 금융권, 학교, 공기업, DB2, 사이베이스 ...
              ------------------------------------------------------- 정형화
              NoSQL : 몽고디비, 레디스, 카산드라, ElastricSearch
                          => JSON
    4. 데이터 모델
         => 데이터를 어떻게 저장 (구조)
         => 트리 / 관계형 (RDBMS)
         => 설계(6~7장)
    5. 데이터베이스의 개념적 구조
        개념 스키마 : 설계만 한 상태 = 데이터 추출(어떤 데이터가 필요한지 확인)
        논리 스키마 : 데이터형 설정
                           주소:문자열(address VARCHAR2)
        물리 스키마 : 실제 메모리 저장
                           크기 결정
                           address VARCHAR2(2000)
        
*/